{"version":3,"file":"static/js/417.5f79a39a.chunk.js","mappings":"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","sources":["Pages/SignUpPage.jsx","components/SignLayout/SignLayout.styled.jsx","components/SignLayout/SighLayout.jsx"],"sourcesContent":["// import { useDispatch } from 'react-redux';\n// import { signUp } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\n\nimport { Button } from 'CommonStyle/Button/Button.styled';\nimport { RouterLink } from 'CommonStyle/RouterLink/RouterLink.styled';\nimport { Title } from 'CommonStyle/Title/Title.styled';\n\nimport { AuthForm } from 'components/forms/AuthForm.styled';\nimport { Input } from 'components/forms/Input.styled';\nimport { FormLabel } from 'components/forms/FormLabel.styled';\nimport { InputError } from 'components/forms/InputError.styled';\nimport { PasswordMeter } from 'components/forms/PasswordMeter.styled';\nimport PasswordInput from 'components/forms/PasswordInput/PasswordInput';\nimport PasswordToolTip from 'components/forms/PasswordToolTip/PasswordToolTip';\nimport SignLayout from 'components/SignLayout/SighLayout';\n\nimport { signUpSchema } from 'js/validation/schemas';\nimport { calculateStrength } from 'js/validation/passwordStrength';\nimport { PasswordInputWrapper } from 'components/forms/PasswordInput/PasswordInput.styled';\n\nconst SignUp = () => {\n  // const dispatch = useDispatch();\n  const onSubmit = e => {\n    //   e.preventDefault();\n    //   dispatch(\n    //     signUp({\n    //       name: e.target.elements.name.value,\n    //       email: e.target.elements.email.value,\n    //       password: e.target.elements.password.value,\n    //     })\n    //   );\n    //   e.target.reset();\n    console.log(e);\n  };\n\n  const {\n    values,\n    touched,\n    errors,\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n  } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      strengthScore: 0,\n    },\n    validationSchema: signUpSchema,\n    onSubmit,\n  });\n  // console.log(values);\n  const handlePasswordChange = e => {\n    const password = e.target.value;\n    const score = calculateStrength(password);\n\n    setFieldValue('password', password);\n    setFieldValue('strengthScore', score);\n  };\n\n  return (\n    <SignLayout>\n      <AuthForm onSubmit={handleSubmit}>\n        <Title>Sign Up</Title>\n        <FormLabel>\n          Enter your email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Email\"\n            $error={touched.email && errors.email}\n          />\n          {touched.email && errors.email && (\n            <InputError>{errors.email}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Enter your password\n          <PasswordInputWrapper>\n            <PasswordInput\n              name=\"password\"\n              value={values.password}\n              onChange={handlePasswordChange}\n              onBlur={handleBlur}\n              placeholder=\"Password\"\n              $error={touched.password && errors.password}\n            />\n            {values.password && (\n              <PasswordToolTip\n                score={values.strengthScore}\n                password={values.password}\n              />\n            )}\n          </PasswordInputWrapper>\n          {values.password && <PasswordMeter $score={values.strengthScore} />}\n          {touched.password && errors.password && (\n            <InputError>{errors.password}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Repeat password\n          <PasswordInput\n            name=\"repeatPassword\"\n            value={values.repeatPassword}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Repeat password\"\n          />\n          {touched.repeatPassword && errors.repeatPassword && (\n            <InputError>{errors.repeatPassword}</InputError>\n          )}\n        </FormLabel>\n        <Button type=\"submit\">Sign up</Button>\n        <RouterLink to=\"/signin\">Sign in</RouterLink>\n      </AuthForm>\n    </SignLayout>\n  );\n};\n\nexport default SignUp;\n","import styled from 'styled-components';\nimport bg from '../../img/signup/bg-mobile.webp';\n\nexport const SignLayoutStyled = styled.section`\n  display: flex;\n  position: relative;\n  picture {\n    z-index: -1;\n  }\n  form {\n    width: 100%;\n    max-width: 280px;\n  }\n  @media screen and (max-width: 767px) {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: center;\n    background-image: url(${bg});\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    form {\n      width: 50%;\n      max-width: 336px;\n    }\n    picture {\n      position: absolute;\n      right: 0;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    form {\n      width: 33.3%;\n      max-width: 384px;\n    }\n    picture {\n      width: 58.1%;\n    }\n  }\n`;\n","import { SignLayoutStyled } from './SignLayout.styled';\n\nimport imgDesk from '../../img/signup/bottle-desk.webp';\nimport imgTablet from '../../img/signup/bottle-tablet.webp';\nimport imgMob from '../../img/signup/bottle-mob.webp';\nimport img from '../../img/signup/bottle-desk.png';\n\nconst SighLayout = ({ children }) => {\n  return (\n    <SignLayoutStyled>\n      <picture>\n        <source\n          media=\"(min-width: 1280px)\"\n          srcSet={imgDesk}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={imgTablet}\n          type=\"image/webp\"\n        />\n        <source media=\"(max-width: 767px)\" srcSet={imgMob} type=\"image/webp\" />\n        <img src={img} alt=\"Responsive\" />\n      </picture>\n      {children}\n    </SignLayoutStyled>\n  );\n};\n\nexport default SighLayout;\n"],"names":["SignUp","values","touched","errors","handleSubmit","handleChange","handleBlur","setFieldValue","useFormik","initialValues","email","password","repeatPassword","strengthScore","validationSchema","signUpSchema","onSubmit","e","console","log","_jsx","SignLayout","children","_jsxs","AuthForm","Title","FormLabel","Input","type","name","value","onChange","onBlur","placeholder","$error","InputError","PasswordInputWrapper","PasswordInput","target","score","calculateStrength","PasswordToolTip","PasswordMeter","$score","Button","RouterLink","to","SignLayoutStyled","styled","_templateObject","_taggedTemplateLiteral","bg","_ref","media","srcSet","imgDesk","imgTablet","imgMob","src","img","alt"],"sourceRoot":""}