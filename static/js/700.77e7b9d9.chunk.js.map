{"version":3,"file":"static/js/700.77e7b9d9.chunk.js","mappings":"0SAiBA,MA0DA,EA1DeA,KACb,MAAMC,GAAWC,EAAAA,EAAAA,OAMX,OAAEC,EAAM,QAAEC,EAAO,OAAEC,EAAM,aAAEC,EAAY,aAAEC,EAAY,WAAEC,IAC3DC,EAAAA,EAAAA,IAAU,CACRC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAClBC,SAXaC,IACff,GAASgB,EAAAA,EAAAA,IAAYD,GAAG,IAa1B,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAC,UACTC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACP,SAAUT,EAAac,SAAA,EAC/BF,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAAAH,SAAC,aACPC,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAJ,SAAA,CAAC,eAETF,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJC,KAAK,QACLC,KAAK,QACLC,MAAOzB,EAAOQ,MACdkB,SAAUtB,EACVuB,OAAQtB,EACRuB,YAAY,QACZC,OAAQ5B,EAAQO,OAASN,EAAOM,QAEjCP,EAAQO,OAASN,EAAOM,QACvBO,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAb,SAAEf,EAAOM,YAGxBU,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAJ,SAAA,CAAC,kBAETF,EAAAA,EAAAA,KAACgB,EAAAA,EAAa,CACZP,KAAK,WACLC,MAAOzB,EAAOS,SACdiB,SAAUtB,EACVuB,OAAQtB,EACRuB,YAAY,WACZC,OAAQ5B,EAAQQ,UAAYP,EAAOO,WAEpCR,EAAQQ,UAAYP,EAAOO,WAC1BM,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAb,SAAEf,EAAOO,eAGxBM,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACT,KAAK,SAAQN,SAAC,aACtBF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,GAAG,mBAAkBjB,SAAC,sBAClCF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,GAAG,UAASjB,SAAC,gBAEhB,C","sources":["Pages/SignInPage.jsx"],"sourcesContent":["import { useFormik } from 'formik';\n\nimport { Button } from 'CommonStyle/Buttons/Button.styled';\nimport { RouterLink } from 'CommonStyle/RouterLink/RouterLink.styled';\nimport { Title } from 'CommonStyle/Title/Title.styled';\n\nimport { Input } from 'components/forms/Input.styled';\nimport { FormLabel } from 'components/forms/FormLabel.styled';\nimport { InputError } from 'components/forms/InputError.styled';\nimport { AuthForm } from 'components/forms/AuthForm.styled';\nimport PasswordInput from 'components/forms/PasswordInput/PasswordInput';\nimport SignLayout from 'components/SignLayout/SignLayout';\n\nimport { signInSchema } from 'js/validation/schemas';\nimport { useDispatch } from 'react-redux';\nimport { signInThunk } from 'redux/auth/thunk';\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    dispatch(signInThunk(e));\n  };\n\n  const { values, touched, errors, handleSubmit, handleChange, handleBlur } =\n    useFormik({\n      initialValues: {\n        email: '',\n        password: '',\n      },\n      validationSchema: signInSchema,\n      onSubmit,\n    });\n\n  return (\n    <SignLayout>\n      <AuthForm onSubmit={handleSubmit}>\n        <Title>Sign in</Title>\n        <FormLabel>\n          Enter email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Email\"\n            $error={touched.email && errors.email}\n          />\n          {touched.email && errors.email && (\n            <InputError>{errors.email}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Enter password\n          <PasswordInput\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Password\"\n            $error={touched.password && errors.password}\n          />\n          {touched.password && errors.password && (\n            <InputError>{errors.password}</InputError>\n          )}\n        </FormLabel>\n        <Button type=\"submit\">Sign in</Button>\n        <RouterLink to=\"/forgot-password\">Forgot password?</RouterLink>\n        <RouterLink to=\"/signup\">Sign up</RouterLink>\n      </AuthForm>\n    </SignLayout>\n  );\n};\n\nexport default SignIn;\n"],"names":["SignIn","dispatch","useDispatch","values","touched","errors","handleSubmit","handleChange","handleBlur","useFormik","initialValues","email","password","validationSchema","signInSchema","onSubmit","e","signInThunk","_jsx","SignLayout","children","_jsxs","AuthForm","Title","FormLabel","Input","type","name","value","onChange","onBlur","placeholder","$error","InputError","PasswordInput","Button","RouterLink","to"],"sourceRoot":""}