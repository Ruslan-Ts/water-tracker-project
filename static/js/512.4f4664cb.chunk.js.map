{"version":3,"file":"static/js/512.4f4664cb.chunk.js","mappings":"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","sources":["Pages/HomePage/HomePage.styled.jsx","Pages/HomePage/components/MyDailyNorma/DailyNorma/DailyNorma.styled.jsx","CommonStyle/Buttons/AddButton.styled.jsx","components/Modals/DailyNorma/FormaWaterRate.jsx","components/Modals/DailyNorma/DailyNorma.jsx","redux/userData/selectors.js","webpack://water-tracker-project/./src/components/Modals/AddWater/AddWaterCSS.module.css?4858","components/Modals/DeleteEntry/DeleteEntryModal.styled.jsx","components/Modals/AddWater/AddWaterModal.styled.jsx","components/Modals/AddWater/AddWaterModal.jsx","Pages/HomePage/components/MyDailyNorma/DailyNorma/DailyNorma.jsx","Pages/HomePage/components/MyDailyNorma/MyDailyNorma.jsx","Pages/HomePage/components/Calendar/Today/Today.styled.jsx","components/Modals/DeleteEntry/DeleteEntryModal.jsx","webpack://water-tracker-project/./src/components/Modals/EditAmount/EditAmountCSS.module.css?3141","components/Modals/EditAmount/EditAmountModal.styled.jsx","components/Modals/EditAmount/EditAmountModal.jsx","webpack://water-tracker-project/./src/Pages/HomePage/components/Calendar/Today/Today.module.css?0425","Pages/HomePage/components/Calendar/Today/Today.jsx","Pages/HomePage/components/Calendar/Month/Month.styled.jsx","Pages/HomePage/components/Calendar/Modal/CalendarModal.styled.jsx","Pages/HomePage/components/Calendar/Modal/CalendarModal.jsx","Pages/HomePage/components/Calendar/Month/DayComponent/DayComponent.jsx","Pages/HomePage/components/Calendar/Month/Month.jsx","Pages/HomePage/components/Calendar/Calendar.styled.jsx","Pages/HomePage/components/Calendar/Calendar.jsx","Pages/HomePage/HomePage.jsx","redux/root/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperHomePage = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n\n  @media only screen and (max-width: 1439px) {\n    padding-bottom: 40px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    gap: 40px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n","import styled from 'styled-components';\nimport theme from '../../../../../CommonStyle/themeJSX';\nimport { HoverBtnStyled } from 'CommonStyle/Buttons/Button.styled';\n\nexport const DailyNormaContainer = styled.div`\n  display: inline-block;\n\n  border-radius: 10px;\n  border: 1px solid ${theme.colors.secondaryLight};\n  background: #fff;\n  box-shadow: 0px 4px 8px 0px rgba(158, 187, 255, 0.12);\n  /* width: 164px; */\n  padding: 8px 20px;\n  margin-bottom: 8px;\n  /* @media only screen and (min-width: 1440px) {\n    display: flex;\n    justify-content: center;\n  } */\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    top: 30px;\n    left: 0;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  line-height: calc(24 / 18);\n  margin-bottom: 12px;\n`;\n\nexport const Norma = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 22px;\n  color: ${theme.colors.primaryAccent};\n\n  @media only screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 24px;\n  }\n`;\n\nexport const NormaContainer = styled.div`\n  display: flex;\n  gap: 12px;\n  align-items: center;\n`;\n\nexport const NormaBtn = styled(HoverBtnStyled)`\n  font-size: ${theme.fontSizes.small};\n  line-height: calc(20 / 16);\n  background-color: transparent;\n  color: ${theme.colors.secondaryBlue};\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  /* padding-top: 40px; */\n  width: 100%;\n  img {\n    margin: 0 auto;\n    margin-bottom: 16px;\n    @media screen and (min-width: 1440px) {\n      margin-bottom: 24px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n    img {\n      height: 548px;\n      object-fit: cover;\n    }\n  }\n`;\n\nexport const StatusContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  button {\n    width: 100%;\n    padding-top: 6px;\n    padding-bottom: 6px;\n    @media screen and (min-width: 768px) {\n      width: 336px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 178px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 12px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 23px;\n  }\n`;\n\nexport const WaterStatus = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 19px;\n  width: 100%;\n  p {\n    color: ${theme.colors.primaryAccent};\n    font-weight: 400;\n    font-size: ${theme.fontSizes.medium};\n    line-height: calc(24 / 18);\n  }\n  @media screen and (min-width: 768px) {\n    width: 356px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 391px;\n  }\n`;\n\nexport const WaterMeter = styled.div`\n  position: relative;\n  height: 8px;\n  background-color: ${theme.colors.secondaryLightBlue};\n  width: calc(100% - 31px);\n  padding: 0 20px 0 11px;\n  border-radius: 10px;\n  margin: 0 auto;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: ${props => {\n      if (props.$filled > 100) {\n        return '100%';\n      }\n      return props.$filled + '%';\n    }};\n    transform: translate(-50%, -50%);\n    width: 14px;\n    height: 14px;\n    background-color: ${theme.colors.primaryLight};\n    border: 1px solid ${theme.colors.primaryAccent};\n    border-radius: 100%;\n  }\n  div {\n    position: absolute;\n    border-radius: 10px;\n\n    top: 0;\n    left: 0;\n\n    width: ${props => {\n      if (props.$filled > 100) {\n        return '100%';\n      }\n      return props.$filled + '%';\n    }};\n    height: 100%;\n    background-color: ${theme.colors.secondaryBlue};\n  }\n`;\n\nexport const WaterInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  span {\n    color: ${theme.colors.primaryAccent};\n    font-size: ${theme.fontSizes.tiny};\n    line-height: calc(16 / 12);\n    position: relative;\n    &::before {\n      content: '';\n      display: block;\n      width: 1px;\n      height: 8px;\n      background-color: ${theme.colors.secondaryLightBlue};\n      position: absolute;\n      top: -12px;\n      left: 50%;\n      transform: translate(-50%);\n    }\n    &:first-child {\n      margin-left: 11px;\n    }\n    &:nth-child(2) {\n      font-size: ${theme.fontSizes.small};\n      line-height: calc(20 / 16);\n      font-weight: 500;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { CommonStyles } from './Button.styled';\nimport theme from 'CommonStyle/themeJSX';\n\nexport const AddButton = styled(CommonStyles)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n  padding: 10px 30px;\n  svg {\n    width: 24px;\n    height: 24px;\n    fill: none;\n    stroke: ${theme.colors.primaryLight};\n  }\n`;\n","import React from 'react';\r\nimport { FormaCalculation, TitlePart } from './DailyNorma.styled';\r\n\r\nimport { rateOutSchema } from 'js/validation/schemas';\r\nimport { useFormik } from 'formik';\r\nimport { Input } from 'components/forms/Input.styled';\r\nimport { InputError } from 'components/forms/InputError.styled';\r\nimport { updateWaterRateThunk } from 'redux/auth/thunk';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectorWaterRate } from 'redux/auth/selectors';\r\nimport { fetchMonthThunk, fetchTodayThunk } from 'redux/userData/thunk';\r\nimport Button from 'CommonStyle/Button';\r\n\r\nconst FormaWaterRate = ({ onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const waterRate = useSelector(selectorWaterRate);\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    // resetForm,\r\n  } = useFormik({\r\n    initialValues: {\r\n      rate: (waterRate / 1000).toFixed(2),\r\n    },\r\n    validationSchema: rateOutSchema,\r\n    onSubmit: async values => {\r\n      await dispatch(updateWaterRateThunk(values.rate)).unwrap();\r\n      await dispatch(fetchTodayThunk()).unwrap();\r\n      await dispatch(fetchMonthThunk(new Date().getMonth())).unwrap();\r\n      onClose();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TitlePart>Write down how much water you will drink in liters:</TitlePart>\r\n      <FormaCalculation $gap={'24px'} onSubmit={handleSubmit}>\r\n        <Input\r\n          type=\"number\"\r\n          step=\"0.001\"\r\n          name=\"rate\"\r\n          value={values.rate}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          error={touched.rate && errors.rate}\r\n        />\r\n        {touched.rate && errors.rate && <InputError>{errors.rate}</InputError>}\r\n\r\n        <Button type=\"submit\" $width=\"160px\" $marginLeft=\"auto\">\r\n          Save\r\n        </Button>\r\n      </FormaCalculation>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormaWaterRate;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Input } from 'components/forms/Input.styled';\r\nimport {\r\n  ContainerNorma,\r\n  FormLabel,\r\n  FormLabelRadio,\r\n  FormaCalculation,\r\n  TitleResult,\r\n  ValueResult,\r\n  WrapperRadio,\r\n  WrapperResult,\r\n} from './DailyNorma.styled';\r\nimport { rateSchema } from 'js/validation/schemas';\r\nimport { InputError } from 'components/forms/InputError.styled';\r\nimport { useFormik } from 'formik';\r\nimport {\r\n  ContainerDefinition,\r\n  LabelDefinition,\r\n  LabelRate,\r\n  NoticeWrapper,\r\n  WrapperDefinition,\r\n} from './DailyNorma.styled';\r\nimport FormaWaterRate from './FormaWaterRate';\r\nimport { CloseBtn } from '../Setting/Setting.styled';\r\nimport Icons from '../../../img/sprite.svg';\r\nimport { ModalContext } from 'components/ModalContext';\r\nimport { HoverCloseBtn } from 'CommonStyle/Buttons/Button.styled';\r\nimport { Title, TitleMedium } from 'CommonStyle/Title/Title.styled';\r\n\r\nconst DailyNorma = () => {\r\n  const [result, setResult] = useState();\r\n  const onClose = useContext(ModalContext);\r\n\r\n  const { values, touched, errors, handleSubmit, handleChange, handleBlur } =\r\n    useFormik({\r\n      initialValues: {\r\n        gender: 'girl',\r\n        weight: 0,\r\n        physical: 0,\r\n      },\r\n      validationSchema: rateSchema,\r\n    });\r\n\r\n  useEffect(() => {\r\n    const calcRate = (gender, weight, physical) => {\r\n      let result;\r\n      switch (gender) {\r\n        case 'girl':\r\n          if (weight < 0 || physical < 0) {\r\n            break;\r\n          }\r\n          result = weight * 0.03 + physical * 0.4;\r\n          setResult(result.toFixed(1));\r\n          break;\r\n\r\n        case 'man':\r\n          if (weight < 0 || physical < 0) {\r\n            break;\r\n          }\r\n          result = weight * 0.04 + physical * 0.6;\r\n          setResult(result.toFixed(1));\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    calcRate(values.gender, values.weight, values.physical);\r\n  }, [values]);\r\n\r\n  return (\r\n    <ContainerNorma>\r\n      <CloseBtn\r\n        onClick={() => {\r\n          onClose();\r\n        }}\r\n      >\r\n        <HoverCloseBtn>\r\n          <svg width=\"24\" height=\"24\">\r\n            <use href={Icons + '#close'}></use>\r\n          </svg>\r\n        </HoverCloseBtn>\r\n      </CloseBtn>\r\n      <Title>My daily norma</Title>\r\n\r\n      <WrapperDefinition>\r\n        <ContainerDefinition>\r\n          <LabelRate>For girl:</LabelRate>\r\n          <LabelDefinition>V=(M*0,03) + (T*0,4)</LabelDefinition>\r\n        </ContainerDefinition>\r\n        <ContainerDefinition>\r\n          <LabelRate>For man:</LabelRate>\r\n          <LabelDefinition>V=(M*0,04) + (T*0,6)</LabelDefinition>\r\n        </ContainerDefinition>\r\n      </WrapperDefinition>\r\n      <NoticeWrapper>\r\n        <span>*</span> V is the volume of the water norm in liters per day, M is\r\n        your body weight, T is the time of active sports, or another type of\r\n        activity commensurate in terms of loads (in the absence of these, you\r\n        must set 0)\r\n      </NoticeWrapper>\r\n      <TitleMedium $marginTop=\"24px\" $marginBottom=\"16px\">\r\n        Calculate your rate:\r\n      </TitleMedium>\r\n\r\n      <FormaCalculation onSubmit={handleSubmit}>\r\n        <WrapperRadio>\r\n          <FormLabelRadio>\r\n            <input\r\n              className=\"visually-hidden\"\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"girl\"\r\n              onChange={handleChange}\r\n              defaultChecked=\"true\"\r\n            />\r\n            <div></div>\r\n            <span>For girl</span>\r\n          </FormLabelRadio>\r\n          <FormLabelRadio>\r\n            <input\r\n              className=\"visually-hidden\"\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"man\"\r\n              onChange={handleChange}\r\n            />\r\n            <div></div>\r\n            <span>For man</span>\r\n          </FormLabelRadio>\r\n        </WrapperRadio>\r\n\r\n        <FormLabel>\r\n          Your weight in kilograms:\r\n          <Input\r\n            type=\"number\"\r\n            step=\"0.001\"\r\n            name=\"weight\"\r\n            value={values.weight}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            error={touched.weight && errors.weight}\r\n          />\r\n          {touched.weight && errors.weight && (\r\n            <InputError>{errors.weight}</InputError>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          The time of active participation in sports or other activities with a\r\n          high physical load:\r\n          <Input\r\n            type=\"number\"\r\n            step=\"0.001\"\r\n            name=\"physical\"\r\n            value={values.physical}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            error={touched.physical && errors.physical}\r\n          />\r\n          {touched.physical && errors.physical && (\r\n            <InputError>{errors.physical}</InputError>\r\n          )}\r\n        </FormLabel>\r\n      </FormaCalculation>\r\n\r\n      <WrapperResult>\r\n        <TitleResult>\r\n          The required amount of water in liters per day:\r\n        </TitleResult>\r\n        <ValueResult>{result} L </ValueResult>\r\n      </WrapperResult>\r\n\r\n      <FormaWaterRate\r\n        onClose={() => {\r\n          onClose();\r\n        }}\r\n      />\r\n    </ContainerNorma>\r\n  );\r\n};\r\n\r\nexport default DailyNorma;\r\n","export const selectorWaterCurrentDay = state => state.dataUser.today;\n\nexport const selectorWaterMonth = state => state.dataUser.month;\n","// extracted by mini-css-extract-plugin\nexport default {\"input_container\":\"AddWaterCSS_input_container__4zEHU\"};","import styled from 'styled-components';\nimport theme from '../../../CommonStyle/themeJSX.jsx';\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  height: 280px;\n  gap: 24px;\n  padding: 32px 24px;\n  border-radius: 10px;\n  background: #fff;\n    transition: opacity 0.3s;\n\n  @media screen and (min-width: 768px) {\n    width: 592px;\n    height: 208px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapperTitle = styled.p`\n  font-weight: 500;\n  line-height: calc(20 / 18);\n`;\n\nexport const ButtonClose = styled.button`\n  background-color: transparent;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalList = styled.ul`\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: end;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 232px;\n  height: 36px;\n  background-color: #d7e3ff;\n  color: ${theme.colors.primaryAccent};\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  width: 232px;\n  height: 36px;\n  background-color: ${theme.colors.secondaryRed};\n  color: ${theme.colors.primaryLight};\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n  }\n`;\n","import styled from 'styled-components';\nimport theme from 'CommonStyle/themeJSX';\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #ffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n  transition: opacity 0.3s;\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 32px 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const Title = styled.div`\n  font-size: ${theme.fontSizes.large};\n  line-height: calc(32 / 26);\n  font-weight: 500;\n  color: ${theme.colors.primaryDark};\n  padding: 0;\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const FormTitle = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  line-height: calc(20 / 18);\n  font-weight: 500;\n  color: ${theme.colors.primaryDark};\n  padding: 0;\n  margin-bottom: 16px;\n`;\nexport const Label2 = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  font-size: ${theme.fontSizes.medium};\n  line-height: calc(20 / 18);\n  font-weight: 500;\n  color: ${theme.colors.primaryDark};\n  padding: 0;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  font-size: ${theme.fontSizes.small};\n  line-height: calc(20 / 16);\n  font-weight: 400;\n  color: ${theme.colors.primaryDark};\n`;\n\nexport const Counter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 7px;\n`;\n\nexport const BtnSign = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid ${theme.colors.primaryAccent};\n  background-color: ${theme.colors.primaryLight};\n  color: ${theme.colors.primaryAccent};\n  fill: ${theme.colors.primaryAccent};\n  box-shadow: 0px 2px 4px rgba(64, 123, 255, 0.2);\n`;\n\nexport const CounterInput = styled.div`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 700;\n  width: 92px;\n  height: 36px;\n  border-radius: 40px;\n  color: ${theme.colors.primaryAccent};\n  background-color: ${theme.colors.secondaryLightBlue};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: end;\n  }\n`;\n\nexport const BtnSave = styled.button`\n  width: 256px;\n  height: 36px;\n  background-color: ${theme.colors.primaryAccent};\n  color: ${theme.colors.primaryLight};\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n  }\n`;\n\nexport const TextCounter = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 700;\n  background-color: ${theme.colors.primaryLight};\n  color: ${theme.colors.primaryAccent};\n  border: none;\n  outline: none;\n  margin-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n    margin-right: 41px;\n  }\n`;\n","import React, { useContext, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport Icons from '../../../img/sprite.svg';\nimport {\n  addWatersThunk,\n  fetchMonthThunk,\n  fetchTodayThunk,\n} from 'redux/userData/thunk';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Input } from 'components/forms/Input.styled';\nimport { Button, HoverCloseBtn } from 'CommonStyle/Buttons/Button.styled';\nimport css from './AddWaterCSS.module.css';\nimport { ButtonClose } from 'components/Modals/DeleteEntry/DeleteEntryModal.styled';\nimport {\n  Wrapper,\n  Title,\n  ModalWrapper,\n  FormTitle,\n  Label,\n  Label2,\n  Counter,\n  BtnSign,\n  CounterInput,\n  Forma,\n  ButtonWrapper,\n  BtnSave,\n  TextCounter,\n} from './AddWaterModal.styled';\nimport { AddWaterSchema } from 'js/validation/schemas';\nimport { ModalContext } from 'components/ModalContext';\nimport { InputError } from 'components/forms/InputError.styled';\n\nconst AddWaterModal = () => {\n  const [counterValue, setCounterValue] = useState(50);\n  const [startDate, setStartDate] = useState(new Date());\n\n  const toggleModal = useContext(ModalContext);\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    toggleModal();\n  };\n\n  const handleClickPlus = e => {\n    if (counterValue < 5000) {\n      setCounterValue(prevValue => {\n        const newValue = prevValue + 50;\n        setFieldValue('waterVolume', newValue);\n        return newValue;\n      });\n    }\n  };\n\n  const handleClickMinus = e => {\n    if (counterValue > 0) {\n      setCounterValue(prevValue => {\n        const newValue = prevValue - 50;\n        setFieldValue('waterVolume', newValue);\n        return newValue;\n      });\n    }\n  };\n\n  const handleSave = async ({ waterVolume, date }) => {\n    const formattedDate = date.toISOString();\n    const newWaterUsed = { waterVolume, date: formattedDate };\n\n    await dispatch(addWatersThunk(newWaterUsed)).unwrap();\n    await dispatch(fetchTodayThunk()).unwrap();\n    await dispatch(fetchMonthThunk(new Date().getMonth())).unwrap();\n    toggleModal();\n  };\n\n  const { handleSubmit, setFieldValue, errors, touched } = useFormik({\n    initialValues: {\n      waterVolume: '50',\n      date: startDate,\n    },\n    validationSchema: AddWaterSchema,\n    onSubmit: values => {\n      handleSave(values);\n    },\n  });\n\n  return (\n    <ModalWrapper>\n      <Wrapper>\n        <Title>Add water</Title>\n        <ButtonClose onClick={handleClose}>\n          <HoverCloseBtn>\n            <svg width=\"24\" height=\"24\">\n              <use href={Icons + '#close'}></use>\n            </svg>\n          </HoverCloseBtn>\n        </ButtonClose>\n      </Wrapper>\n      <FormTitle>Choose a value:</FormTitle>\n      <Forma onSubmit={handleSubmit}>\n        <Label htmlFor=\"counterValue\">\n          Amount of water:\n          <Counter>\n            <BtnSign type=\"button\" onClick={handleClickMinus}>\n              <svg width=\"24\" height=\"24\">\n                <use href={Icons + '#minus'}></use>\n              </svg>\n            </BtnSign>\n            <CounterInput>{counterValue}ml</CounterInput>\n            <BtnSign type=\"button\" onClick={handleClickPlus}>\n              <svg width=\"24\" height=\"24\">\n                <use href={Icons + '#icon-plus'}></use>\n              </svg>\n            </BtnSign>\n          </Counter>\n        </Label>\n        <Label htmlFor=\"time\">\n          Recording time:\n          <DatePicker\n            className={css.input_container}\n            selected={startDate}\n            onChange={date => {\n              setStartDate(date);\n              setFieldValue('date', date);\n            }}\n            showTimeSelect\n            showTimeSelectOnly\n            timeIntervals={15}\n            timeCaption=\"Time\"\n            dateFormat=\"h:mm aa\"\n            minTime={new Date(2023, 1, 1, 0, 0)}\n            maxTime={new Date()}\n            timeZone=\"UTC\"\n            maxDate={new Date()}\n            style={{\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              padding: '8px',\n            }}\n          />\n        </Label>\n\n        <Label2 htmlFor=\"waterVolume\">\n          Enter the value of the water used:\n          <Input\n            type=\"number\"\n            id=\"waterVolume\"\n            name=\"waterVolume\"\n            onChange={e => {\n              const newValue = e.target.value;\n              if (newValue !== '') {\n                setFieldValue('waterVolume', Number(newValue));\n                setCounterValue(Number(newValue));\n              } else {\n                setFieldValue('waterVolume', '');\n                setCounterValue('');\n              }\n            }}\n            onBlur={() => {\n              setFieldValue('waterVolume', counterValue);\n            }}\n            value={counterValue}\n          />\n        </Label2>\n\n        {touched.waterVolume && errors.waterVolume && (\n          <InputError>{errors.waterVolume}</InputError>\n        )}\n        <ButtonWrapper>\n          <TextCounter>{counterValue}ml</TextCounter>\n          <Button as={BtnSave} type=\"submit\">\n            Save\n          </Button>\n        </ButtonWrapper>\n      </Forma>\n    </ModalWrapper>\n  );\n};\n\nexport default AddWaterModal;\n","import { useContext } from 'react';\nimport {\n  DailyNormaContainer,\n  Container,\n  Norma,\n  NormaBtn,\n  NormaContainer,\n  Title,\n  StatusContainer,\n  WaterStatus,\n  WaterMeter,\n  WaterInfo,\n} from './DailyNorma.styled';\n\nimport { AddButton } from 'CommonStyle/Buttons/AddButton.styled';\nimport { ModalContext } from 'components/ModalContext';\nimport DailyNormaModal from 'components/Modals/DailyNorma/DailyNorma';\n\nimport imgDesk from '../../../../../img/home/bottle-desk-1x.webp';\nimport imgDesk2x from '../../../../../img/home/bottle-desk-2x.webp';\nimport imgTablet from '../../../../../img/home/bottle-tab-1x.webp';\nimport imgTablet2x from '../../../../../img/home/bottle-tab-2x.webp';\nimport imgMob from '../../../../../img/home/bottle-mob-1x.webp';\nimport imgMob2x from '../../../../../img/home/bottle-mob-2x.webp';\nimport imgDeskPng from '../../../../../img/home/bottle-desk-1x.png';\nimport imgDeskPng2x from '../../../../../img/home/bottle-desk-2x.png';\nimport imgTabletPng from '../../../../../img/home/bottle-tab-1x.png';\nimport imgTabletPng2x from '../../../../../img/home/bottle-tab-2x.png';\nimport imgMobPng from '../../../../../img/home/bottle-mob-1x.png';\nimport imgMobPng2x from '../../../../../img/home/bottle-mob-2x.png';\n\nimport sprite from '../../../../../img/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectorWaterCurrentDay } from 'redux/userData/selectors';\nimport { selectorWaterRate } from 'redux/auth/selectors';\nimport AddWaterModal from 'components/Modals/AddWater/AddWaterModal';\n\nexport const DailyNorma = () => {\n  const onClose = useContext(ModalContext);\n  const currentDayData = useSelector(selectorWaterCurrentDay);\n  const waterRate = useSelector(selectorWaterRate);\n  const handleOpenWaterModal = () => {\n    onClose(<AddWaterModal />);\n  };\n  return (\n    <Container>\n      <DailyNormaContainer>\n        <Title>My daily norma</Title>\n        <NormaContainer>\n          <Norma>{(waterRate / 1000).toFixed(1)} L</Norma>\n          <NormaBtn\n            onClick={() => {\n              onClose(<DailyNormaModal />);\n            }}\n          >\n            Edit\n          </NormaBtn>\n        </NormaContainer>\n      </DailyNormaContainer>\n      <picture>\n        <source\n          media=\"(min-width: 1440px)\"\n          srcSet={`${imgDesk} 1x, ${imgDesk2x} 2x`}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(min-width: 1440px)\"\n          srcSet={`${imgDeskPng} 1x, ${imgDeskPng2x} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={`${imgTablet} 1x, ${imgTablet2x} 2x`}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={`${imgTabletPng} 1x, ${imgTabletPng2x} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(max-width: 767px)\"\n          srcSet={`${imgMob} 1x, ${imgMob2x} 2x`}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(max-width: 767px)\"\n          srcSet={`${imgMobPng} 1x, ${imgMobPng2x} 2x`}\n          type=\"image/png\"\n        />\n        <img src={imgDeskPng} alt=\"Bottle\" />\n      </picture>\n      <StatusContainer>\n        <WaterStatus>\n          <p>Today</p>\n          <WaterMeter $filled={currentDayData.dailyNormFulfillment}>\n            <div />\n          </WaterMeter>\n          <WaterInfo>\n            <span>0%</span>\n            <span>50%</span>\n            <span>100%</span>\n          </WaterInfo>\n        </WaterStatus>\n        <AddButton onClick={handleOpenWaterModal}>\n          <svg>\n            <use href={sprite + '#plus-circle'} />\n          </svg>\n          Add water\n        </AddButton>\n      </StatusContainer>\n    </Container>\n  );\n};\n","import { DailyNorma } from './DailyNorma/DailyNorma';\n\nexport const MyDailyNorma = () => {\n  return (\n    <>\n      <DailyNorma />\n    </>\n  );\n};\n","import { HoverBtnStyled } from 'CommonStyle/Buttons/Button.styled';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: fit-content;\n  h2 {\n    color: #2f2f2f;\n    font-size: 24px;\n    font-weight: 500;\n    line-height: calc(30 / 24);\n\n    @media screen and (min-width: 768px) {\n      font-size: 26px;\n      line-height: calc(32 / 26);\n    }\n\n    @media screen and (min-width: 1440px) {\n    }\n  }\n`;\nexport const Viewport = styled.div`\n  height: 220px;\n  overflow-y: auto;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 228px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 212px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #9ebbff;\n    border-radius: 2px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: #d7e3ff;\n    width: 1px;\n  }\n`;\n\nexport const TableStyled = styled.table`\n  border-collapse: collapse;\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 534px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: 1px solid #d7e3ff;\n  margin-bottom: 12px;\n\n  & Button {\n    background-color: transparent;\n  }\n`;\n\nexport const ImgCont = styled.div`\n  justify-content: center;\n  display: flex;\n  justify-items: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    svg {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n\nexport const TableCell = styled.td`\n  text-align: center;\n  color: var(--primery-color-blue, #407bff);\n  font-family: Roboto;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n`;\n\nexport const TextCell = styled.td`\n  padding: 12px;\n  text-align: left;\n  color: var(--primery-color-blue, #407bff);\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const TimeCell = styled.td`\n  padding-right: 35px;\n  text-align: left;\n  color: var(--primery-color-black, #2f2f2f);\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    padding-right: 390px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-right: 278px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 4px;\n  cursor: pointer;\n`;\n\nexport const AddButton = styled(HoverBtnStyled)`\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  padding: 12px 8px;\n  color: #407bff;\n  background-color: transparent;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin: 4px;\n`;\n","import React, { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteEntryThunk,\n  fetchMonthThunk,\n  fetchTodayThunk,\n} from 'redux/userData/thunk';\n\nimport { Title } from 'CommonStyle/Title/Title.styled';\nimport { Button, HoverCloseBtn } from 'CommonStyle/Buttons/Button.styled';\n\nimport Icons from '../../../img/sprite.svg';\n\nimport {\n  ModalWrapper,\n  Wrapper,\n  WrapperTitle,\n  ButtonClose,\n  ModalList,\n  ButtonCancel,\n  ButtonDelete,\n} from './DeleteEntryModal.styled';\nimport { ModalContext } from 'components/ModalContext';\n\nconst DeleteEntryModal = ({ waterId }) => {\n  const dispatch = useDispatch();\n  const toggleModal = useContext(ModalContext);\n\n  const handleDelete = async waterId => {\n    await dispatch(deleteEntryThunk(waterId)).unwrap();\n    await dispatch(fetchTodayThunk()).unwrap();\n    await dispatch(fetchMonthThunk(new Date().getMonth())).unwrap();\n    handleClose();\n  };\n  const handleClose = () => {\n    toggleModal();\n  };\n\n  return (\n    <>\n      <ModalWrapper>\n        <Wrapper>\n          <Title>Delete Entry</Title>\n          <ButtonClose onClick={handleClose}>\n            <HoverCloseBtn>\n              <svg width=\"24\" height=\"24\">\n                <use href={Icons + '#close'}></use>\n              </svg>\n            </HoverCloseBtn>\n          </ButtonClose>\n        </Wrapper>\n        <WrapperTitle>Are you sure you want to delete the entry?</WrapperTitle>\n        <ModalList>\n          <li>\n            <Button as={ButtonCancel} onClick={handleClose}>\n              Cancel\n            </Button>\n          </li>\n          <li>\n            <Button as={ButtonDelete} onClick={() => handleDelete(waterId)}>\n              Delete\n            </Button>\n          </li>\n        </ModalList>\n      </ModalWrapper>\n    </>\n  );\n};\n\nexport default DeleteEntryModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"input_container\":\"EditAmountCSS_input_container__SVMIr\"};","import styled from 'styled-components';\nimport theme from 'CommonStyle/themeJSX';\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  background-color: #ffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n  transition: opacity 0.3s;\n  width: 280px;\n  height: 648px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 580px;\n    padding: 32px 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 580px;\n  }\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const FormTitle = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  line-height: calc(20 / 18);\n  font-weight: 500;\n  color: ${theme.colors.primaryDark};\n  padding: 0;\n`;\nexport const Label2 = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  font-size: ${theme.fontSizes.medium};\n  line-height: calc(20 / 18);\n  font-weight: 500;\n  color: ${theme.colors.primaryDark};\n  padding: 0;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  font-size: ${theme.fontSizes.small};\n  line-height: calc(20 / 16);\n  font-weight: 400;\n  color: ${theme.colors.primaryDark};\n`;\n\nexport const Counter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 7px;\n`;\n\nexport const BtnSign = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid ${theme.colors.primaryAccent};\n  background-color: ${theme.colors.primaryLight};\n  color: ${theme.colors.primaryAccent};\n  fill: ${theme.colors.primaryAccent};\n  box-shadow: 0px 2px 4px rgba(64, 123, 255, 0.2);\n`;\n\nexport const CounterInput = styled.div`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 700;\n  width: 92px;\n  height: 36px;\n  border-radius: 40px;\n  color: ${theme.colors.primaryAccent};\n  background-color: ${theme.colors.secondaryLightBlue};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: end;\n  }\n`;\n\nexport const BtnSave = styled.button`\n  width: 256px;\n  height: 36px;\n  background-color: ${theme.colors.primaryAccent};\n  color: ${theme.colors.primaryLight};\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n  }\n`;\n\nexport const TextCounter = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 700;\n  background-color: ${theme.colors.primaryLight};\n  color: ${theme.colors.primaryAccent};\n  border: none;\n  outline: none;\n  margin-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n    margin-right: 41px;\n  }\n`;\n\nexport const CounterScore = styled.div`\n  width: 254px;\n  height: 52px;\n  display: flex;\n  text-align: center;\n  align-items: center;\n  border-radius: 10px;\n  background-color: ${theme.colors.secondaryLightBlue};\n`;\n\nexport const ImgCont = styled.div`\n  margin-left: 24px;\n  display: flex;\n  justify-items: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    svg {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n\nexport const TableCell = styled.div`\n  text-align: center;\n  color: var(--primery-color-blue, #407bff);\n  font-family: Roboto;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n`;\n\nexport const TextCell = styled.div`\n  /* padding: 12px; */\n  margin-left: 12px;\n  align-items: center;\n  text-align: left;\n  color: var(--primery-color-blue, #407bff);\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const TimeCell = styled.div`\n  /* padding-right: 35px; */\n  margin-left: 16px;\n  align-items: center;\n  text-align: left;\n  color: var(--primery-color-black, #2f2f2f);\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    /* padding-right: 390px; */\n  }\n\n  @media screen and (min-width: 768px) {\n    /* padding-right: 278px; */\n  }\n`;\n","import React, { useContext, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport Icons from '../../../img/sprite.svg';\nimport {\n  editWatersThunk,\n  fetchMonthThunk,\n  fetchTodayThunk,\n} from 'redux/userData/thunk';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Title } from 'CommonStyle/Title/Title.styled';\nimport { Input } from 'components/forms/Input.styled';\nimport { Button, HoverCloseBtn } from 'CommonStyle/Buttons/Button.styled';\nimport css from './EditAmountCSS.module.css';\nimport {\n  Wrapper,\n  ButtonClose,\n} from 'components/Modals/DeleteEntry/DeleteEntryModal.styled';\nimport {\n  ModalWrapper,\n  FormTitle,\n  Label,\n  Label2,\n  Counter,\n  BtnSign,\n  CounterInput,\n  Forma,\n  ButtonWrapper,\n  BtnSave,\n  TextCounter,\n  CounterScore,\n  ImgCont,\n  TimeCell,\n  TextCell,\n} from './EditAmountModal.styled';\nimport { AddWaterSchema } from 'js/validation/schemas';\nimport { ModalContext } from 'components/ModalContext';\nimport { InputError } from 'components/forms/InputError.styled';\n\nconst EditAmountModal = data => {\n  const [counterValue, setCounterValue] = useState(data.data.waterVolume);\n  const [startDate, setStartDate] = useState(new Date(data.data.date));\n  const toggleModal = useContext(ModalContext);\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    toggleModal();\n  };\n\n  const handleClickPlus = e => {\n    if (counterValue < 5000) {\n      setCounterValue(prevValue => {\n        const newValue = prevValue + 50;\n        setFieldValue('waterVolume', newValue);\n        return newValue;\n      });\n    }\n  };\n\n  const handleClickMinus = e => {\n    if (counterValue > 0) {\n      setCounterValue(prevValue => {\n        const newValue = prevValue - 50;\n        setFieldValue('waterVolume', newValue);\n        return newValue;\n      });\n    }\n  };\n\n  const handleSave = async ({ waterVolume, date }) => {\n    const newWaterUsed = { waterVolume, date };\n\n    await dispatch(\n      editWatersThunk({ newWaterUsed, id: data.data._id })\n    ).unwrap();\n    await dispatch(fetchTodayThunk()).unwrap();\n    await dispatch(fetchMonthThunk(new Date().getMonth())).unwrap();\n    toggleModal();\n  };\n\n  const { handleSubmit, setFieldValue, errors, touched } = useFormik({\n    initialValues: {\n      waterVolume: data.data.waterVolume,\n      date: data.data.date,\n    },\n    validationSchema: AddWaterSchema,\n    onSubmit: values => {\n      handleSave(values);\n    },\n  });\n\n  return (\n    <ModalWrapper>\n      <Wrapper>\n        <Title>Edit the entered amount of water</Title>\n        <ButtonClose onClick={handleClose}>\n          <HoverCloseBtn>\n            <svg width=\"24\" height=\"24\">\n              <use href={Icons + '#close'}></use>\n            </svg>\n          </HoverCloseBtn>\n        </ButtonClose>\n      </Wrapper>\n      <Forma onSubmit={handleSubmit}>\n        <CounterScore>\n          <ImgCont>\n            <svg className={css.cup} width=\"26\" height=\"26\">\n              <use href={Icons + '#cup'}></use>\n            </svg>\n          </ImgCont>\n\n          <TextCell>{data.data.waterVolume} ml</TextCell>\n          <TimeCell>\n            {new Intl.DateTimeFormat('en', {\n              hour: 'numeric',\n              minute: 'numeric',\n              hour12: true,\n            }).format(new Date(data.data.date))}\n          </TimeCell>\n        </CounterScore>\n        <FormTitle>Correct entered data:</FormTitle>\n        <Label htmlFor=\"counterValue\">\n          Amount of water:\n          <Counter>\n            <BtnSign type=\"button\" onClick={handleClickMinus}>\n              <svg width=\"24\" height=\"24\">\n                <use href={Icons + '#minus'}></use>\n              </svg>\n            </BtnSign>\n            <CounterInput>{counterValue}ml</CounterInput>\n            <BtnSign type=\"button\" onClick={handleClickPlus}>\n              <svg width=\"24\" height=\"24\">\n                <use href={Icons + '#icon-plus'}></use>\n              </svg>\n            </BtnSign>\n          </Counter>\n        </Label>\n        <Label htmlFor=\"time\">\n          Recording time:\n          <DatePicker\n            className={css.input_container}\n            selected={startDate}\n            onChange={date => {\n              setStartDate(date);\n              setFieldValue('date', date.toISOString());\n            }}\n            showTimeSelect\n            showTimeSelectOnly\n            timeIntervals={15}\n            timeCaption=\"Time\"\n            dateFormat=\"h:mm aa\"\n            maxDate={new Date()}\n            timeZone=\"UTC\"\n            style={{\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              padding: '8px',\n            }}\n          />\n        </Label>\n\n        <Label2 htmlFor=\"waterVolume\">\n          Enter the value of the water used:\n          <Input\n            type=\"number\"\n            id=\"waterVolume\"\n            name=\"waterVolume\"\n            onChange={e => {\n              const newValue = e.target.value;\n              if (newValue !== '') {\n                setFieldValue('waterVolume', Number(newValue));\n                setCounterValue(Number(newValue));\n              } else {\n                setFieldValue('waterVolume', '');\n                setCounterValue('');\n              }\n            }}\n            onBlur={() => {\n              setFieldValue('waterVolume', counterValue);\n            }}\n            value={counterValue}\n          />\n        </Label2>\n\n        {touched.waterVolume && errors.waterVolume && (\n          <InputError>{errors.waterVolume}</InputError>\n        )}\n        <ButtonWrapper>\n          <TextCounter>{counterValue}ml</TextCounter>\n          <Button as={BtnSave} type=\"submit\">\n            Save\n          </Button>\n        </ButtonWrapper>\n      </Forma>\n    </ModalWrapper>\n  );\n};\n\nexport default EditAmountModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon_trash\":\"Today_icon_trash__SWJwV\",\"icon_pencil\":\"Today_icon_pencil__899jR\"};","import { useContext, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectorWaterCurrentDay } from 'redux/userData/selectors';\nimport { fetchTodayThunk } from 'redux/userData/thunk';\n\nimport {\n  Viewport,\n  TableStyled,\n  TableRow,\n  TableCell,\n  TextCell,\n  TimeCell,\n  Button,\n  Container,\n  AddButton,\n  ImgCont,\n} from './Today.styled';\n\nimport { ModalContext } from 'components/ModalContext';\nimport AddWaterModal from 'components/Modals/AddWater/AddWaterModal';\nimport DeleteEntryModal from 'components/Modals/DeleteEntry/DeleteEntryModal';\nimport EditAmountModal from 'components/Modals/EditAmount/EditAmountModal';\n\nimport css from './Today.module.css';\nimport Icons from '../../../../../img/sprite.svg';\n\nconst Today = () => {\n  const dispatch = useDispatch();\n  const toggleModal = useContext(ModalContext);\n  const { waterInputsForToday } = useSelector(selectorWaterCurrentDay);\n  const listRef = useRef(null);\n\n  const handleOpenWaterModal = () => {\n    toggleModal(<AddWaterModal />);\n  };\n  const handleDeleteNotice = waterId => {\n    toggleModal(<DeleteEntryModal waterId={waterId} />);\n  };\n  const handleEditNotice = ({ data }) => {\n    toggleModal(<EditAmountModal data={data} />);\n  };\n\n  useEffect(() => {\n    dispatch(fetchTodayThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight;\n    }\n  }, [waterInputsForToday]);\n\n  return (\n    <Container>\n      <h2>Today</h2>\n      <Viewport ref={listRef}>\n        <TableStyled>\n          <tbody>\n            {waterInputsForToday\n              .toSorted(\n                (a, b) =>\n                  new Date(a.date).getTime() - new Date(b.date).getTime()\n              )\n              .map(data => (\n                <TableRow key={data._id}>\n                  <TableCell>\n                    <ImgCont>\n                      <svg className={css.cup} width=\"26\" height=\"26\">\n                        <use href={Icons + '#cup'}></use>\n                      </svg>\n                    </ImgCont>\n                  </TableCell>\n                  <TextCell>{data.waterVolume} ml</TextCell>\n                  <TimeCell>\n                    {new Intl.DateTimeFormat('en', {\n                      hour: 'numeric',\n                      minute: 'numeric',\n                      hour12: true,\n                    }).format(new Date(data.date))}\n                  </TimeCell>\n                  <TableCell>\n                    <Button\n                      aria-label=\"Edit notice\"\n                      onClick={() => {\n                        handleEditNotice({ data });\n                      }}\n                    >\n                      <svg className={css.icon_pencil} width=\"16\" height=\"16\">\n                        <use href={Icons + '#pencil-square'}></use>\n                      </svg>\n                    </Button>\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      aria-label=\"Delete notice\"\n                      onClick={() => {\n                        handleDeleteNotice(data._id);\n                      }}\n                    >\n                      <svg className={css.icon_trash} width=\"16\" height=\"16\">\n                        <use href={Icons + '#trash'}></use>\n                      </svg>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </tbody>\n        </TableStyled>\n        <AddButton type=\"submit\" onClick={handleOpenWaterModal}>\n          + Add water\n        </AddButton>\n      </Viewport>\n    </Container>\n  );\n};\n\nexport default Today;\n","import styled from 'styled-components';\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 506px;\n\n  @media screen and (min-width: 768px) {\n    height: 340px;\n  }\n  @media screen and (min-width: 1440px) {\n    height: 284px;\n  }\n`;\n\nexport const MonthNavigation = styled.div`\n  h2 {\n    color: #2f2f2f;\n    font-size: 24px;\n    font-weight: 500;\n    line-height: calc(30 / 24);\n\n    @media screen and (min-width: 768px) {\n      font-size: 26px;\n      line-height: calc(32 / 26);\n    }\n    @media screen and (min-width: 1440px) {\n    }\n  }\n\n  display: flex;\n  margin-bottom: 16px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ArrowButton = styled.button`\n  cursor: pointer;\n  margin: 0 10px;\n  background-color: rgba(0, 0, 255, 0);\n`;\n\nexport const Day = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: ${props => (props.$isOutlineVisible ? '1px solid #ff9d43' : 'none')};\n  cursor: pointer;\n  font-size: 14px;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px) {\n    gap: 34px;\n    row-gap: 20px;\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const MonthControl = styled.div`\n  color: var(--primery-color-blue, #407bff);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Month = styled.span`\n  font-size: 16px;\n  line-height: 20px;\n`;\n\nexport const DayPercent = styled.span`\n  color: var(--secondary-color-4, #9ebbff);\n\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  align-items: center;\n  margin-top: 4px;\n  line-height: calc(16 / 10);\n  @media screen and (min-width: 768px) {\n    font-size: 13px;\n    line-height: calc(20 / 13);\n  }\n  @media screen and (min-width: 1440px) {\n    font-size: 12px;\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const DaysContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  column-gap: 26px;\n  row-gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 34px;\n    row-gap: 20px;\n  }\n  @media screen and (min-width: 1440px) {\n    column-gap: 22px;\n  }\n`;\n\nexport const DayCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n","import styled from 'styled-components';\nimport theme from 'CommonStyle/themeJSX';\nimport { motion } from 'framer-motion';\n\nexport const CalendarModalStyled = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 280px;\n  position: absolute;\n  bottom: 54px;\n \n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0px 4px 4px 0px rgba(64, 123, 255, 0.3);\n  padding: 24px 13px;\n  transform-origin: bottom;\n  z-index: 2;\n\n  @media screen and (max-width: 767px) {\n    /* left: 50%; */\n    left: ${props => -7 - props.$deltaNum}px;\n    transform: translateX(-50%);\n  }\n\n  @media screen and (min-width: 768px) {\n    right: ${props => (props.$delta ? '17px' : '')};\n    left: ${props => (props.$delta ? '' : '17px')};\n    padding: 24px 16px;\n    width: 292px;\n    bottom: 58px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    bottom: 56px;\n  }\n\n  h3 {\n    color: ${theme.colors.primaryAccent};\n    font-size: ${theme.fontSizes.small};\n    line-height: calc(20 / 16);\n  }\n  p {\n    color: ${theme.colors.primaryDark};\n    font-size: ${theme.fontSizes.small};\n    line-height: calc(20 / 16);\n    span {\n      color: ${theme.colors.primaryAccent};\n      font-size: ${theme.fontSizes.medium};\n      font-weight: 500;\n      line-height: calc(24 / 18);\n    }\n  }\n`;\n","import { scaleYVariants } from 'js/animations/variants';\nimport { CalendarModalStyled } from './CalendarModal.styled';\n\nconst CalendarModal = ({ calendarRef, refData, waterData = {} }) => {\n  const { data, waterRate, dailyNormFulfillment, servingOfWater } = waterData;\n\n  const currentRef = refData?.current.getBoundingClientRect().left;\n  const containerRef = calendarRef?.current.getBoundingClientRect().left;\n\n  let position = true;\n\n  const delta = currentRef - containerRef;\n  if (delta < 300) {\n    position = false;\n  }\n\n  return (\n    <CalendarModalStyled\n      variants={scaleYVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      $delta={position}\n      $deltaNum={delta}\n    >\n      {Object.values(waterData).length ? (\n        <>\n          <h3>{data}</h3>\n          <p>\n            Daily norma: <span>{waterRate} L</span>\n          </p>\n          <p>\n            Fulfillment of the daily norm: <span>{dailyNormFulfillment}%</span>\n          </p>\n          <p>\n            How many servings of water: <span>{servingOfWater}</span>\n          </p>\n        </>\n      ) : (\n        <h3>You don't have info about this day.</h3>\n      )}\n    </CalendarModalStyled>\n  );\n};\n\nexport default CalendarModal;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { Day, DayCell, DayPercent } from '../Month.styled';\nimport CalendarModal from '../../Modal/CalendarModal';\nimport { AnimatePresence } from 'framer-motion';\n\nconst DayComponent = ({ calendarRef, day, waterPercentage }) => {\n  const [activeModal, setActiveModal] = useState(null);\n  const ref = useRef(null);\n\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      setActiveModal(null);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  const toggleModal = useCallback((modalId = null) => {\n    setActiveModal(prevModal => (prevModal === modalId ? null : modalId));\n  }, []);\n\n  return (\n    <DayCell key={day}>\n      <AnimatePresence>\n        {activeModal === day && (\n          <CalendarModal\n            calendarRef={calendarRef}\n            refData={ref}\n            key={day}\n            waterData={waterPercentage}\n          />\n        )}\n      </AnimatePresence>\n      <Day\n        ref={ref}\n        onClick={() => toggleModal(day)}\n        $isOutlineVisible={\n          !waterPercentage || waterPercentage.dailyNormFulfillment < 100\n        }\n      >\n        {day}\n      </Day>\n      <DayPercent>\n        {waterPercentage ? `${waterPercentage.dailyNormFulfillment}%` : '0%'}\n      </DayPercent>\n    </DayCell>\n  );\n};\n\nexport default DayComponent;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Icons from '../../../../../img/sprite.svg';\n\nimport { fetchMonthThunk } from 'redux/userData/thunk';\nimport { selectorWaterMonth } from 'redux/userData/selectors';\n\nimport {\n  ArrowButton,\n  CalendarContainer,\n  DaysContainer,\n  MonthNavigation,\n  MonthControl,\n  Month,\n} from './Month.styled';\nimport DayComponent from './DayComponent/DayComponent';\n\nconst Calendar = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const dispatch = useDispatch();\n  const waterForMonth = useSelector(selectorWaterMonth);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    dispatch(fetchMonthThunk(currentDate.getMonth()));\n  }, [dispatch, currentDate]);\n\n  const handleNextMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)\n    );\n  };\n\n  const handlePrevMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)\n    );\n  };\n\n  const getDaysInMonth = () => {\n    return new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() + 1,\n      0\n    ).getDate();\n  };\n\n  const renderDays = () => {\n    const daysInMonth = getDaysInMonth();\n    const days = Array.from({ length: daysInMonth }, (_, index) => index + 1);\n\n    return days.map(day => {\n      const waterPercentage = waterForMonth?.find(item => {\n        return Number(item.data.split(',')[0]) === day;\n      });\n\n      return (\n        <DayComponent\n          calendarRef={ref}\n          key={day}\n          day={day}\n          waterPercentage={waterPercentage}\n        />\n      );\n    });\n  };\n\n  return (\n    <CalendarContainer className=\"calendar\" ref={ref}>\n      <MonthNavigation>\n        <h2>Month</h2>\n        <MonthControl>\n          <ArrowButton aria-label=\"Previous month\" onClick={handlePrevMonth}>\n            <svg width=\"14\" height=\"14\">\n              <use href={Icons + '#arrow-left'}></use>\n            </svg>\n          </ArrowButton>\n          <Month>\n            {new Intl.DateTimeFormat('en-US', { month: 'long' }).format(\n              currentDate\n            )}\n          </Month>\n          <ArrowButton aria-label=\"Previous month\" onClick={handleNextMonth}>\n            <svg width=\"14\" height=\"14\">\n              <use href={Icons + '#arrow-right'}></use>\n            </svg>\n          </ArrowButton>\n        </MonthControl>\n      </MonthNavigation>\n      <DaysContainer>{renderDays()}</DaysContainer>\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\n\nexport const CalendarWrap = styled.div`\n  border-radius: 10px;\n  background-color: #ecf2ff;\n  box-shadow: 0px 4px 14px rgba(64, 123, 255, 0.3);\n  display: flex;\n  padding: 24px 8px;\n  flex-direction: column;\n  gap: 24px;\n  width: 280px;\n  margin: 0 auto;\n\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 32px 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n    padding: 32px 24px;\n  }\n`;\n","import React from 'react';\nimport Today from './Today/Today';\nimport Month from './Month/Month';\nimport { CalendarWrap } from './Calendar.styled';\n// import { Button } from 'CommonStyle/Button/Button.styled';\n\nconst Calendar = () => {\n  return (\n    <CalendarWrap>\n      <Today />\n      <Month />\n    </CalendarWrap>\n  );\n};\n\nexport default Calendar;\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/root/selectors';\n\nimport { WrapperHomePage } from './HomePage.styled';\n\nimport Loader from 'components/Loader';\nimport { MyDailyNorma } from './components/MyDailyNorma/MyDailyNorma';\nimport Calendar from './components/Calendar/Calendar';\n\nconst HomePage = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <div className=\"container\">\n      <WrapperHomePage>\n        {isLoading && <Loader />}\n        <MyDailyNorma />\n        <Calendar />\n      </WrapperHomePage>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const selectIsLoading = state => state.root.isLoading;\n"],"names":["WrapperHomePage","styled","_templateObject","_taggedTemplateLiteral","DailyNormaContainer","theme","Title","_templateObject2","Norma","_templateObject3","NormaContainer","_templateObject4","NormaBtn","HoverBtnStyled","_templateObject5","Container","_templateObject6","StatusContainer","_templateObject7","WaterStatus","_templateObject8","WaterMeter","_templateObject9","props","$filled","WaterInfo","_templateObject10","AddButton","CommonStyles","_ref","onClose","dispatch","useDispatch","waterRate","useSelector","selectorWaterRate","values","touched","errors","handleChange","handleBlur","handleSubmit","useFormik","initialValues","rate","toFixed","validationSchema","rateOutSchema","onSubmit","async","updateWaterRateThunk","unwrap","fetchTodayThunk","fetchMonthThunk","Date","getMonth","_jsxs","_Fragment","children","_jsx","TitlePart","FormaCalculation","$gap","Input","type","step","name","value","onChange","onBlur","error","InputError","Button","$width","$marginLeft","DailyNorma","result","setResult","useState","useContext","ModalContext","gender","weight","physical","rateSchema","useEffect","calcRate","ContainerNorma","CloseBtn","onClick","HoverCloseBtn","width","height","href","Icons","WrapperDefinition","ContainerDefinition","LabelRate","LabelDefinition","NoticeWrapper","TitleMedium","$marginTop","$marginBottom","WrapperRadio","FormLabelRadio","className","defaultChecked","FormLabel","WrapperResult","TitleResult","ValueResult","FormaWaterRate","selectorWaterCurrentDay","state","dataUser","today","selectorWaterMonth","month","ModalWrapper","Wrapper","WrapperTitle","ButtonClose","ModalList","ButtonCancel","ButtonDelete","Forma","FormTitle","Label2","Label","Counter","BtnSign","CounterInput","ButtonWrapper","_templateObject11","BtnSave","_templateObject12","TextCounter","_templateObject13","AddWaterModal","counterValue","setCounterValue","startDate","setStartDate","toggleModal","setFieldValue","waterVolume","date","AddWaterSchema","newWaterUsed","toISOString","addWatersThunk","handleSave","handleClose","htmlFor","e","prevValue","newValue","DatePicker","css","selected","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","minTime","maxTime","timeZone","maxDate","style","border","borderRadius","padding","id","target","Number","as","currentDayData","DailyNormaModal","media","srcSet","concat","imgDesk","imgDesk2x","imgDeskPng","imgDeskPng2x","imgTablet","imgTablet2x","imgTabletPng","imgTabletPng2x","imgMob","imgMob2x","imgMobPng","imgMobPng2x","src","alt","dailyNormFulfillment","handleOpenWaterModal","sprite","MyDailyNorma","Viewport","TableStyled","TableRow","ImgCont","TableCell","TextCell","TimeCell","waterId","deleteEntryThunk","handleDelete","CounterScore","_templateObject14","_templateObject15","_templateObject16","data","editWatersThunk","_id","Intl","DateTimeFormat","hour","minute","hour12","format","Today","waterInputsForToday","listRef","useRef","current","scrollTop","scrollHeight","ref","toSorted","a","b","getTime","map","EditAmountModal","handleEditNotice","DeleteEntryModal","CalendarContainer","MonthNavigation","ArrowButton","Day","$isOutlineVisible","MonthControl","Month","DayPercent","DaysContainer","DayCell","CalendarModalStyled","motion","$deltaNum","$delta","calendarRef","refData","waterData","servingOfWater","position","delta","getBoundingClientRect","left","variants","scaleYVariants","initial","animate","exit","Object","length","day","waterPercentage","activeModal","setActiveModal","handleClick","contains","document","addEventListener","removeEventListener","useCallback","modalId","arguments","undefined","prevModal","AnimatePresence","CalendarModal","Calendar","currentDate","setCurrentDate","waterForMonth","handlePrevMonth","getFullYear","handleNextMonth","renderDays","daysInMonth","getDate","Array","from","_","index","find","item","split","DayComponent","CalendarWrap","HomePage","isLoading","selectIsLoading","Loader","root"],"sourceRoot":""}