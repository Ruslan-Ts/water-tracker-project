{"version":3,"file":"static/js/932.f8cca07e.chunk.js","mappings":"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","sources":["Pages/SignInPage.jsx","components/SignLayout/SignLayout.styled.jsx","components/SignLayout/SighLayout.jsx","components/forms/PasswordInput/PasswordInput.jsx","components/forms/PasswordInput/PasswordInput.styled.jsx"],"sourcesContent":["import { useFormik } from 'formik';\n\nimport { Button } from 'CommonStyle/Button/Button.styled';\nimport { RouterLink } from 'CommonStyle/RouterLink/RouterLink.styled';\nimport { Title } from 'CommonStyle/Title/Title.styled';\n\nimport { Input } from 'components/forms/Input.styled';\nimport { FormLabel } from 'components/forms/FormLabel.styled';\nimport { InputError } from 'components/forms/InputError.styled';\nimport { AuthForm } from 'components/forms/AuthForm.styled';\nimport PasswordInput from 'components/forms/PasswordInput/PasswordInput';\nimport SignLayout from 'components/SignLayout/SighLayout';\n\nimport { signUpSchema } from 'js/validation/schemas';\n\nconst SignIn = () => {\n  const onSubmit = e => {};\n  const { values, touched, errors, handleChange, handleBlur } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: signUpSchema,\n    onSubmit,\n  });\n\n  return (\n    <SignLayout>\n      <AuthForm onSubmit={onSubmit}>\n        <Title>Sign in</Title>\n        <FormLabel>\n          Enter email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Email\"\n            $error={touched.email && errors.email}\n          />\n          {touched.email && errors.email && (\n            <InputError>{errors.email}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Enter password\n          <PasswordInput\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Password\"\n            $error={touched.password && errors.password}\n          />\n          {touched.password && errors.password && (\n            <InputError>{errors.password}</InputError>\n          )}\n        </FormLabel>\n        <Button type=\"submit\">Sign up</Button>\n        <RouterLink to=\"/forgot-password\">Forgot password?</RouterLink>\n        <RouterLink to=\"/signup\">Sign up</RouterLink>\n      </AuthForm>\n    </SignLayout>\n  );\n};\n\nexport default SignIn;\n","import styled from 'styled-components';\nimport bg from '../../img/signup/bg-mobile.webp';\n\nexport const SignLayoutStyled = styled.section`\n  display: flex;\n  position: relative;\n  picture {\n    z-index: -1;\n  }\n  form {\n    width: 100%;\n    max-width: 280px;\n  }\n  @media screen and (max-width: 767px) {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: center;\n    background-image: url(${bg});\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    form {\n      width: 50%;\n      max-width: 336px;\n    }\n    picture {\n      position: absolute;\n      right: 0;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    form {\n      width: 33.3%;\n      max-width: 384px;\n    }\n    picture {\n      width: 58.1%;\n    }\n  }\n`;\n","import { SignLayoutStyled } from './SignLayout.styled';\n\nimport imgDesk from '../../img/signup/bottle-desk.webp';\nimport imgTablet from '../../img/signup/bottle-tablet.webp';\nimport imgMob from '../../img/signup/bottle-mob.webp';\nimport img from '../../img/signup/bottle-desk.png';\n\nconst SighLayout = ({ children }) => {\n  return (\n    <SignLayoutStyled>\n      <picture>\n        <source\n          media=\"(min-width: 1280px)\"\n          srcSet={imgDesk}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={imgTablet}\n          type=\"image/webp\"\n        />\n        <source media=\"(max-width: 767px)\" srcSet={imgMob} type=\"image/webp\" />\n        <img src={img} alt=\"Responsive\" />\n      </picture>\n      {children}\n    </SignLayoutStyled>\n  );\n};\n\nexport default SighLayout;\n","import { useState } from 'react';\nimport { Input } from '../Input.styled';\nimport { PasswordInputStyled } from './PasswordInput.styled';\n\nconst PasswordInput = ({ ...fields }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <PasswordInputStyled>\n      <Input type={showPassword ? 'text' : 'password'} {...fields} />\n      <button onClick={togglePassword} type=\"button\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          fill=\"none\"\n        >\n          <path\n            d=\"M2.65331 5.482C2.02961 6.21812 1.56518 7.07547 1.28931 8C2.15064 10.892 4.82931 13 7.99997 13C8.66197 13 9.30197 12.908 9.90864 12.7367M4.15197 4.152C5.29372 3.39854 6.63202 2.99788 7.99997 3C11.1706 3 13.8486 5.108 14.71 7.99867C14.2379 9.5782 13.2246 10.941 11.848 11.848M4.15197 4.152L1.99997 2M4.15197 4.152L6.58531 6.58533M11.848 11.848L14 14M11.848 11.848L9.41464 9.41467C9.60037 9.22893 9.7477 9.00844 9.84822 8.76577C9.94874 8.52309 10.0005 8.263 10.0005 8.00033C10.0005 7.73767 9.94874 7.47757 9.84822 7.2349C9.7477 6.99223 9.60037 6.77173 9.41464 6.586C9.22891 6.40027 9.00841 6.25294 8.76574 6.15242C8.52307 6.0519 8.26297 6.00016 8.00031 6.00016C7.73764 6.00016 7.47755 6.0519 7.23487 6.15242C6.9922 6.25294 6.77171 6.40027 6.58597 6.586M9.41397 9.414L6.58664 6.58667\"\n            stroke=\"#407BFF\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </button>\n    </PasswordInputStyled>\n  );\n};\n\nexport default PasswordInput;\n","import styled from 'styled-components';\n\nexport const PasswordInputStyled = styled.div`\n  position: relative;\n  width: 100%;\n  button {\n    display: flex;\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const PasswordInputWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n`;\n"],"names":["SignIn","onSubmit","e","values","touched","errors","handleChange","handleBlur","useFormik","initialValues","email","password","validationSchema","signUpSchema","_jsx","SignLayout","children","_jsxs","AuthForm","Title","FormLabel","Input","type","name","value","onChange","onBlur","placeholder","$error","InputError","PasswordInput","Button","RouterLink","to","SignLayoutStyled","styled","_templateObject","_taggedTemplateLiteral","bg","_ref","media","srcSet","imgDesk","imgTablet","imgMob","src","img","alt","fields","showPassword","setShowPassword","useState","PasswordInputStyled","onClick","togglePassword","xmlns","width","height","viewBox","fill","d","stroke","strokeLinecap","strokeLinejoin","PasswordInputWrapper","_templateObject2"],"sourceRoot":""}