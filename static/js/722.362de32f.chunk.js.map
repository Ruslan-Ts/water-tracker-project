{"version":3,"file":"static/js/722.362de32f.chunk.js","mappings":"+UAsBA,MAiGA,EAjGeA,KACb,MAAMC,GAAWC,EAAAA,EAAAA,OAOX,OACJC,EAAM,QACNC,EAAO,OACPC,EAAM,aACNC,EAAY,aACZC,EAAY,WACZC,EAAU,cACVC,IACEC,EAAAA,EAAAA,IAAU,CACZC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,eAAgB,GAChBC,cAAe,GAEjBC,iBAAkBC,EAAAA,GAClBC,SArBeC,IACf,MAAM,MAAEP,EAAK,SAAEC,GAAaM,EAC5BlB,GAASmB,EAAAA,EAAAA,IAAY,CAAER,QAAOC,aAAY,IA6B5C,OACEQ,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAC,UACTC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACP,SAAUZ,EAAaiB,SAAA,EAC/BF,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAAAH,SAAC,aACPC,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAJ,SAAA,CAAC,oBAETF,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJC,KAAK,QACLC,KAAK,QACLC,MAAO5B,EAAOS,MACdoB,SAAUzB,EACV0B,OAAQzB,EACR0B,YAAY,QACZC,OAAQ/B,EAAQQ,OAASP,EAAOO,QAEjCR,EAAQQ,OAASP,EAAOO,QACvBS,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAb,SAAElB,EAAOO,YAGxBY,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAJ,SAAA,CAAC,uBAETC,EAAAA,EAAAA,MAACa,EAAAA,EAAoB,CAAAd,SAAA,EACnBF,EAAAA,EAAAA,KAACiB,EAAAA,EAAa,CACZR,KAAK,WACLC,MAAO5B,EAAOU,SACdmB,SAjCiBb,IAC3B,MAAMN,EAAWM,EAAEoB,OAAOR,MACpBS,GAAQC,EAAAA,EAAAA,IAAkB5B,GAEhCJ,EAAc,WAAYI,GAC1BJ,EAAc,gBAAiB+B,EAAM,EA6B3BP,OAAQzB,EACR0B,YAAY,WACZC,OAAQ/B,EAAQS,UAAYR,EAAOQ,WAEpCV,EAAOU,WACNQ,EAAAA,EAAAA,KAACqB,EAAAA,EAAe,CACdF,MAAOrC,EAAOY,cACdF,SAAUV,EAAOU,cAItBV,EAAOU,WAAYQ,EAAAA,EAAAA,KAACsB,EAAAA,EAAa,CAACC,OAAQzC,EAAOY,gBACjDX,EAAQS,UAAYR,EAAOQ,WAC1BQ,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAb,SAAElB,EAAOQ,eAGxBW,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAJ,SAAA,CAAC,mBAETF,EAAAA,EAAAA,KAACiB,EAAAA,EAAa,CACZR,KAAK,iBACLC,MAAO5B,EAAOW,eACdkB,SAAUzB,EACV0B,OAAQzB,EACR0B,YAAY,kBACZC,OAAQ/B,EAAQU,gBAAkBT,EAAOS,iBAE1CV,EAAQU,gBAAkBT,EAAOS,iBAChCO,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAb,SAAElB,EAAOS,qBAGxBO,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CAAChB,KAAK,SAAQN,SAAC,aACtBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,GAAG,UAASxB,SAAC,gBAEhB,C","sources":["Pages/SignUpPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { signUpThunk } from 'redux/auth/thunk';\n\nimport { Button } from 'CommonStyle/Buttons/Button.styled';\nimport { RouterLink } from 'CommonStyle/RouterLink/RouterLink.styled';\nimport { Title } from 'CommonStyle/Title/Title.styled';\n\nimport { AuthForm } from 'components/forms/AuthForm.styled';\nimport { Input } from 'components/forms/Input.styled';\nimport { FormLabel } from 'components/forms/FormLabel.styled';\nimport { InputError } from 'components/forms/InputError.styled';\nimport { PasswordMeter } from 'components/forms/PasswordMeter.styled';\nimport PasswordInput from 'components/forms/PasswordInput/PasswordInput';\nimport PasswordToolTip from 'components/forms/PasswordToolTip/PasswordToolTip';\nimport { PasswordInputWrapper } from 'components/forms/PasswordInput/PasswordInput.styled';\nimport SignLayout from 'components/SignLayout/SignLayout';\n\nimport { signUpSchema } from 'js/validation/schemas';\nimport { calculateStrength } from 'js/validation/passwordStrength';\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    const { email, password } = e;\n    dispatch(signUpThunk({ email, password }));\n  };\n\n  const {\n    values,\n    touched,\n    errors,\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n  } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      strengthScore: 0,\n    },\n    validationSchema: signUpSchema,\n    onSubmit,\n  });\n  const handlePasswordChange = e => {\n    const password = e.target.value;\n    const score = calculateStrength(password);\n\n    setFieldValue('password', password);\n    setFieldValue('strengthScore', score);\n  };\n\n  return (\n    <SignLayout>\n      <AuthForm onSubmit={handleSubmit}>\n        <Title>Sign Up</Title>\n        <FormLabel>\n          Enter your email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Email\"\n            $error={touched.email && errors.email}\n          />\n          {touched.email && errors.email && (\n            <InputError>{errors.email}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Enter your password\n          <PasswordInputWrapper>\n            <PasswordInput\n              name=\"password\"\n              value={values.password}\n              onChange={handlePasswordChange}\n              onBlur={handleBlur}\n              placeholder=\"Password\"\n              $error={touched.password && errors.password}\n            />\n            {values.password && (\n              <PasswordToolTip\n                score={values.strengthScore}\n                password={values.password}\n              />\n            )}\n          </PasswordInputWrapper>\n          {values.password && <PasswordMeter $score={values.strengthScore} />}\n          {touched.password && errors.password && (\n            <InputError>{errors.password}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Repeat password\n          <PasswordInput\n            name=\"repeatPassword\"\n            value={values.repeatPassword}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Repeat password\"\n            $error={touched.repeatPassword && errors.repeatPassword}\n          />\n          {touched.repeatPassword && errors.repeatPassword && (\n            <InputError>{errors.repeatPassword}</InputError>\n          )}\n        </FormLabel>\n        <Button type=\"submit\">Sign up</Button>\n        <RouterLink to=\"/signin\">Sign in</RouterLink>\n      </AuthForm>\n    </SignLayout>\n  );\n};\n\nexport default SignUp;\n"],"names":["SignUp","dispatch","useDispatch","values","touched","errors","handleSubmit","handleChange","handleBlur","setFieldValue","useFormik","initialValues","email","password","repeatPassword","strengthScore","validationSchema","signUpSchema","onSubmit","e","signUpThunk","_jsx","SignLayout","children","_jsxs","AuthForm","Title","FormLabel","Input","type","name","value","onChange","onBlur","placeholder","$error","InputError","PasswordInputWrapper","PasswordInput","target","score","calculateStrength","PasswordToolTip","PasswordMeter","$score","Button","RouterLink","to"],"sourceRoot":""}