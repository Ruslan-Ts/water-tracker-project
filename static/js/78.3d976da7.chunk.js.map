{"version":3,"file":"static/js/78.3d976da7.chunk.js","mappings":"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","sources":["js/validation/passwordStrength.js","components/forms/PasswordMeter.styled.jsx","components/forms/PasswordToolTip/PasswordToolTip.styled.jsx","components/forms/PasswordToolTip/PasswordToolTip.jsx","Pages/SignUpPage.jsx","components/SignLayout/SignLayout.styled.jsx","components/SignLayout/SighLayout.jsx","components/forms/PasswordInput/PasswordInput.jsx","components/forms/PasswordInput/PasswordInput.styled.jsx"],"sourcesContent":["import zxcvbn from 'zxcvbn';\n\nexport const calculateStrength = password => {\n  const result = zxcvbn(password);\n  const strength = (result.score / 4) * 100; // Normalize the score to a percentage\n\n  return strength;\n};\n\nexport const getTitle = strength => {\n  if (strength === 0) {\n    return 'Very weak';\n  } else if (strength === 25) {\n    return 'Weak';\n  } else if (strength === 50) {\n    return 'Medium';\n  } else if (strength === 75) {\n    return 'Strong';\n  } else {\n    return 'Very strong';\n  }\n};\n\nexport const getColor = strength => {\n  if (strength === 0) return 'red';\n  if (strength <= 25) return 'orange';\n  if (strength <= 50) return 'yellow';\n  if (strength <= 75) return 'lightgreen';\n  return 'green';\n};\n\nexport const checkPassword = {\n  hasLetters: password => /[a-z]/.test(password) && /[A-Z]/.test(password),\n  hasNumber: password => /\\d/.test(password),\n  hasSpecialSymb: password => /[!@#$%^&*()_+{}[\\]:;<>,.?~\\\\/-]/.test(password),\n};\n","import styled from 'styled-components';\nimport { getColor } from 'js/validation/passwordStrength';\n\nexport const PasswordMeter = styled.div`\n  width: ${props => {\n    if (props.$score === 0) {\n      return '10%';\n    }\n    return props.$score + '%';\n  }};\n  background-color: ${props => getColor(props.$score)};\n  height: 5px;\n  border-radius: 5px;\n`;\n","import styled from 'styled-components';\nimport theme from 'CommonStyle/theme';\n\nexport const PasswordTipStyled = styled.div`\n  position: relative;\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 28px;\n    height: 28px;\n    background-color: ${theme.colors.primaryAccent};\n    color: ${theme.colors.primaryLight};\n    position: absolute;\n    right: -35px;\n    top: 50%;\n    transform: translateY(-50%);\n    border-radius: 100%;\n  }\n  & > div {\n    display: ${props => (props.$show ? 'block' : 'none')};\n    position: absolute;\n    right: -46px;\n    top: 42px;\n    background-color: #e0e0e0;\n    width: 360px;\n    border-radius: 10px;\n    padding: 15px;\n    margin-top: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    z-index: 1;\n    &:before {\n      content: '';\n      position: absolute;\n      right: 5px;\n      top: -19px;\n      border-style: solid;\n      border-width: 20px 20px 0;\n      border-color: #e0e0e0 transparent transparent transparent;\n      transform: rotate(180deg);\n    }\n    @media screen and (min-width: 1280px) {\n      width: 410px;\n    }\n  }\n\n  span {\n    display: block;\n    text-align: right;\n  }\n`;\n\nexport const PasswordTipParagraph = styled.p`\n  ${props => (props.$marked ? { color: 'green', opacity: 0.5 } : null)}\n`;\n","import { useState } from 'react';\nimport {\n  PasswordTipParagraph,\n  PasswordTipStyled,\n} from './PasswordToolTip.styled';\nimport { getTitle, checkPassword } from 'js/validation/passwordStrength';\n\nconst PasswordToolTip = ({ score, password }) => {\n  const [showTip, setShowTip] = useState(false);\n  const toggleToolTip = e => {\n    setShowTip(!showTip);\n  };\n\n  return (\n    <PasswordTipStyled $show={showTip}>\n      <button type=\"button\" onClick={toggleToolTip}>\n        ?\n      </button>\n      <div>\n        <p>Tips for creating strong passwords:</p>\n        <PasswordTipParagraph $marked={checkPassword.hasNumber(password)}>\n          Try to include numbers.\n        </PasswordTipParagraph>\n        <PasswordTipParagraph $marked={checkPassword.hasLetters(password)}>\n          Both uppercase and lowercase letters.\n        </PasswordTipParagraph>\n        <PasswordTipParagraph $marked={checkPassword.hasSpecialSymb(password)}>\n          Special symbols like:!\"#$%&'()*+,-./:;&lt;=&gt;?@[\\]&#123;&#124;&#125;\n          ^_`~\n        </PasswordTipParagraph>\n        <span>Password strength: {getTitle(score)}</span>\n      </div>\n    </PasswordTipStyled>\n  );\n};\n\nexport default PasswordToolTip;\n","// import { useDispatch } from 'react-redux';\n// import { signUp } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\n\nimport { Button } from 'CommonStyle/Button/Button.styled';\nimport { RouterLink } from 'CommonStyle/RouterLink/RouterLink.styled';\nimport { Title } from 'CommonStyle/Title/Title.styled';\n\nimport { AuthForm } from 'components/forms/AuthForm.styled';\nimport { Input } from 'components/forms/Input.styled';\nimport { FormLabel } from 'components/forms/FormLabel.styled';\nimport { InputError } from 'components/forms/InputError.styled';\nimport { PasswordMeter } from 'components/forms/PasswordMeter.styled';\nimport PasswordInput from 'components/forms/PasswordInput/PasswordInput';\nimport PasswordToolTip from 'components/forms/PasswordToolTip/PasswordToolTip';\nimport SignLayout from 'components/SignLayout/SighLayout';\n\nimport { signUpSchema } from 'js/validation/schemas';\nimport { calculateStrength } from 'js/validation/passwordStrength';\nimport { PasswordInputWrapper } from 'components/forms/PasswordInput/PasswordInput.styled';\n\nconst SignUp = () => {\n  // const dispatch = useDispatch();\n  const onSubmit = e => {\n    //   e.preventDefault();\n    //   dispatch(\n    //     signUp({\n    //       name: e.target.elements.name.value,\n    //       email: e.target.elements.email.value,\n    //       password: e.target.elements.password.value,\n    //     })\n    //   );\n    //   e.target.reset();\n    console.log(e);\n  };\n\n  const {\n    values,\n    touched,\n    errors,\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n  } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      strengthScore: 0,\n    },\n    validationSchema: signUpSchema,\n    onSubmit,\n  });\n  // console.log(values);\n  const handlePasswordChange = e => {\n    const password = e.target.value;\n    const score = calculateStrength(password);\n\n    setFieldValue('password', password);\n    setFieldValue('strengthScore', score);\n  };\n\n  return (\n    <SignLayout>\n      <AuthForm onSubmit={handleSubmit}>\n        <Title>Sign Up</Title>\n        <FormLabel>\n          Enter your email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Email\"\n            $error={touched.email && errors.email}\n          />\n          {touched.email && errors.email && (\n            <InputError>{errors.email}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Enter your password\n          <PasswordInputWrapper>\n            <PasswordInput\n              name=\"password\"\n              value={values.password}\n              onChange={handlePasswordChange}\n              onBlur={handleBlur}\n              placeholder=\"Password\"\n              $error={touched.password && errors.password}\n            />\n            {values.password && (\n              <PasswordToolTip\n                score={values.strengthScore}\n                password={values.password}\n              />\n            )}\n          </PasswordInputWrapper>\n          {values.password && <PasswordMeter $score={values.strengthScore} />}\n          {touched.password && errors.password && (\n            <InputError>{errors.password}</InputError>\n          )}\n        </FormLabel>\n        <FormLabel>\n          Repeat password\n          <PasswordInput\n            name=\"repeatPassword\"\n            value={values.repeatPassword}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Repeat password\"\n          />\n          {touched.repeatPassword && errors.repeatPassword && (\n            <InputError>{errors.repeatPassword}</InputError>\n          )}\n        </FormLabel>\n        <Button type=\"submit\">Sign up</Button>\n        <RouterLink to=\"/signin\">Sign in</RouterLink>\n      </AuthForm>\n    </SignLayout>\n  );\n};\n\nexport default SignUp;\n","import styled from 'styled-components';\nimport bg from '../../img/signup/bg-mobile.webp';\n\nexport const SignLayoutStyled = styled.section`\n  display: flex;\n  position: relative;\n  picture {\n    z-index: -1;\n  }\n  form {\n    width: 100%;\n    max-width: 280px;\n  }\n  @media screen and (max-width: 767px) {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: center;\n    background-image: url(${bg});\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    form {\n      width: 50%;\n      max-width: 336px;\n    }\n    picture {\n      position: absolute;\n      right: 0;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    form {\n      width: 33.3%;\n      max-width: 384px;\n    }\n    picture {\n      width: 58.1%;\n    }\n  }\n`;\n","import { SignLayoutStyled } from './SignLayout.styled';\n\nimport imgDesk from '../../img/signup/bottle-desk.webp';\nimport imgTablet from '../../img/signup/bottle-tablet.webp';\nimport imgMob from '../../img/signup/bottle-mob.webp';\nimport img from '../../img/signup/bottle-desk.png';\n\nconst SighLayout = ({ children }) => {\n  return (\n    <SignLayoutStyled>\n      <picture>\n        <source\n          media=\"(min-width: 1280px)\"\n          srcSet={imgDesk}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={imgTablet}\n          type=\"image/webp\"\n        />\n        <source media=\"(max-width: 767px)\" srcSet={imgMob} type=\"image/webp\" />\n        <img src={img} alt=\"Responsive\" />\n      </picture>\n      {children}\n    </SignLayoutStyled>\n  );\n};\n\nexport default SighLayout;\n","import { useState } from 'react';\nimport { Input } from '../Input.styled';\nimport { PasswordInputStyled } from './PasswordInput.styled';\n\nconst PasswordInput = ({ ...fields }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <PasswordInputStyled>\n      <Input type={showPassword ? 'text' : 'password'} {...fields} />\n      <button onClick={togglePassword} type=\"button\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          fill=\"none\"\n        >\n          <path\n            d=\"M2.65331 5.482C2.02961 6.21812 1.56518 7.07547 1.28931 8C2.15064 10.892 4.82931 13 7.99997 13C8.66197 13 9.30197 12.908 9.90864 12.7367M4.15197 4.152C5.29372 3.39854 6.63202 2.99788 7.99997 3C11.1706 3 13.8486 5.108 14.71 7.99867C14.2379 9.5782 13.2246 10.941 11.848 11.848M4.15197 4.152L1.99997 2M4.15197 4.152L6.58531 6.58533M11.848 11.848L14 14M11.848 11.848L9.41464 9.41467C9.60037 9.22893 9.7477 9.00844 9.84822 8.76577C9.94874 8.52309 10.0005 8.263 10.0005 8.00033C10.0005 7.73767 9.94874 7.47757 9.84822 7.2349C9.7477 6.99223 9.60037 6.77173 9.41464 6.586C9.22891 6.40027 9.00841 6.25294 8.76574 6.15242C8.52307 6.0519 8.26297 6.00016 8.00031 6.00016C7.73764 6.00016 7.47755 6.0519 7.23487 6.15242C6.9922 6.25294 6.77171 6.40027 6.58597 6.586M9.41397 9.414L6.58664 6.58667\"\n            stroke=\"#407BFF\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </button>\n    </PasswordInputStyled>\n  );\n};\n\nexport default PasswordInput;\n","import styled from 'styled-components';\n\nexport const PasswordInputStyled = styled.div`\n  position: relative;\n  width: 100%;\n  button {\n    display: flex;\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const PasswordInputWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n`;\n"],"names":["checkPassword","password","test","PasswordMeter","styled","_templateObject","_taggedTemplateLiteral","props","$score","getColor","strength","PasswordTipStyled","theme","$show","PasswordTipParagraph","_templateObject2","$marked","color","opacity","_ref","score","showTip","setShowTip","useState","_jsxs","children","_jsx","type","onClick","e","SignUp","values","touched","errors","handleSubmit","handleChange","handleBlur","setFieldValue","useFormik","initialValues","email","repeatPassword","strengthScore","validationSchema","signUpSchema","onSubmit","console","log","SignLayout","AuthForm","Title","FormLabel","Input","name","value","onChange","onBlur","placeholder","$error","InputError","PasswordInputWrapper","PasswordInput","target","zxcvbn","calculateStrength","PasswordToolTip","Button","RouterLink","to","SignLayoutStyled","bg","media","srcSet","imgDesk","imgTablet","imgMob","src","img","alt","fields","showPassword","setShowPassword","PasswordInputStyled","togglePassword","xmlns","width","height","viewBox","fill","d","stroke","strokeLinecap","strokeLinejoin"],"sourceRoot":""}